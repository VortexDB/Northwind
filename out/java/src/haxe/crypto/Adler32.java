// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package haxe.crypto;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Adler32 extends haxe.lang.HxObject
{
	public Adler32(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Adler32()
	{
		//line 32 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		haxe.crypto.Adler32.__hx_ctor_haxe_crypto_Adler32(this);
	}
	
	
	protected static void __hx_ctor_haxe_crypto_Adler32(haxe.crypto.Adler32 __hx_this)
	{
		//line 33 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		__hx_this.a1 = 1;
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		__hx_this.a2 = 0;
	}
	
	
	public static int make(haxe.io.Bytes b)
	{
		//line 72 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		haxe.crypto.Adler32 a = new haxe.crypto.Adler32();
		//line 73 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		a.update(b, 0, b.length);
		//line 74 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		return a.get();
	}
	
	
	public int a1;
	
	public int a2;
	
	public int get()
	{
		//line 38 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		return ( ( this.a2 << 16 ) | this.a1 );
	}
	
	
	public void update(haxe.io.Bytes b, int pos, int len)
	{
		//line 42 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		int a1 = this.a1;
		//line 42 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		int a2 = this.a2;
		//line 43 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 43 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			int _g1 = pos;
			//line 43 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			int _g = ( pos + len );
			//line 43 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			while (( _g1 < _g ))
			{
				//line 43 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				int p = _g1++;
				//line 44 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				int c = ( b.b[p] & 255 );
				//line 45 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				a1 = ( (( a1 + c )) % 65521 );
				//line 46 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				a2 = ( (( a2 + a1 )) % 65521 );
			}
			
		}
		
		//line 48 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		this.a1 = a1;
		//line 49 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		this.a2 = a2;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			switch (field.hashCode())
			{
				case 3057:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a2")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						this.a2 = ((int) (value) );
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return value;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 3056:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a1")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						this.a1 = ((int) (value) );
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return value;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			switch (field.hashCode())
			{
				case 3057:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a2")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						this.a2 = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return value;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 3056:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a1")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						this.a1 = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return value;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			switch (field.hashCode())
			{
				case -838846263:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("update")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "update")) );
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 3056:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a1")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return this.a1;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 102230:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("get")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get")) );
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 3057:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a2")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return this.a2;
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			switch (field.hashCode())
			{
				case 3057:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a2")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return ((double) (this.a2) );
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 3056:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("a1")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return ((double) (this.a1) );
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			switch (field.hashCode())
			{
				case -838846263:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("update")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						this.update(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
				case 102230:
				{
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					if (field.equals("get")) 
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						__temp_executeDef1 = false;
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
						return this.get();
					}
					
					//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
					break;
				}
				
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		baseArr.push("a2");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		baseArr.push("a1");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\crypto\\Adler32.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


